<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialSize" value="${initialSize}"></property>
        <property name="maxActive" value="${maxActive}"></property>
        <property name="minIdle" value="${minIdle}"></property>
        <property name="maxWait" value="${maxWait}"></property>
    </bean>
    <!-- jdbcTemplate -->
    <!--<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>-->
    <!-- namedParameterJdbcTemplate -->
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"></constructor-arg>
    </bean>

      <!-- 事物管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 编程式事物管理 -->
    <bean id="transanctionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"></property>
    </bean>
    <!-- 事物管理的通知 -->
    <tx:advice id="TestAdvice" transaction-manager="transactionManager">
        <tx:attributes>   <!-- *代表service所有方法 -->
            <!-- <tx:method name="*" propagation="REQUIRED"/> -->
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED"/>
            <tx:method name="query*" propagation="REQUIRED"/>
            <tx:method name="apply*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="edit*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <!-- 添加的通知(切面) -->
    <aop:config>                                                      <!-- 切点，*代表任意，..代表方法的任意参数 -->
        <aop:pointcut id="allTestServiceMethod" expression="execution(* com.iyungu.*.impl.*.*(..))"/>
         <!-- 通知 -->
        <aop:advisor pointcut-ref="allTestServiceMethod" advice-ref="TestAdvice" />
    </aop:config>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--<property name="mapperLocations" value="classpath:com/iyungu/*/mapper/*.xml"></property>-->
         <!-- 分页 -->
        <!--<property name="plugins">
            <bean class="com.iyungu.www.util.MybatisSpringPageInterceptor"></bean>
        </property>-->
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.iyungu.*.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    <!-- 定义切面 -->
      <!--<bean id="studentServiceAspect" class="com.iyungu.www.advice.StudentServiceAspect"></bean>
      <aop:config>
          <aop:aspect id="studentServiceAspect" ref="studentServiceAspect"> &lt;!&ndash; *和com之间有空格，*代表任意，..代表任意参数&ndash;&gt;
              <aop:pointcut id="businessService" expression="execution(* com.iyungu.*.service.*.*(..))"/>
               <aop:before method="doBefore" pointcut-ref="businessService"></aop:before>
               <aop:after method="doAfter" pointcut-ref="businessService"></aop:after>
              <aop:around method="doAround" pointcut-ref="businessService"></aop:around>
              <aop:after-returning method="doAfterReturing" pointcut-ref="businessService"></aop:after-returning>
              <aop:after-throwing method="doAfterThrowing" pointcut-ref="businessService" throwing="ex"></aop:after-throwing>
          </aop:aspect>
      </aop:config>-->
    <!-- 自动扫描的包 -->
    <context:component-scan base-package="com.iyungu.www.*" ></context:component-scan>
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>